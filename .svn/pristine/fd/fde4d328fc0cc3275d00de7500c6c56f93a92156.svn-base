/**
 * 易遊網版權所有 ©2000 - 2013 ezTravel Co., Ltd. all rights reserved.
 */
package controllers;

import static play.data.Form.form;
import static play.mvc.Results.ok;
import models.HsrHtl;
import models.Page;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;

import play.data.Form;
import play.mvc.Result;
import play.mvc.With;
import service.HsrService;
import tw.com.eztravel.ezlogger.Logger;
import tw.com.eztravel.ezlogger.LoggerFactory;
import actions.IdentifyAction;
import actions.LogAction;

import com.typesafe.config.ConfigFactory;

import context.SecurityContext;

/**
 * 組合頁
 * 
 * @author CJWang
 * 
 */
@With(LogAction.class)
@Controller
public class SearchListController {

  /**
   * 組合列表
   * 
   * @return
   */
  @With(IdentifyAction.class)
  public Result searchList(int pageNo, String orderBy) {
    Page page = new Page();
    page.setPageNo(pageNo);
    page.setPageSize(pageSize);
    page.setOrderBy(orderBy);
    Form<HsrHtl> hsrHtlForm = form(HsrHtl.class);
    HsrHtl hsrHtl = hsrHtlForm.bindFromRequest().get();
    hsrHtl.setBusinessType(SecurityContext.getCurrentBusinessType());
    logger.info("查詢高鐵酒店");
    HsrHtl result = null;
    try {
      result = this.hsrService.search(hsrHtl, page);
    } catch (Exception e) {
      logger.error(e.getMessage(), e);
      return ok(views.html.search.notFound.render());
    }

    if (null == result || null == result.getDepHsrInfo() || null == result.getReturnHsrInfo()
        || null == result.getDepSchedule() || null == result.getReturnSchedule()) {
      logger.info("查無資料");
      return ok(views.html.search.notFound.render());
    }
    return ok(views.html.search.searchList.render(result));
  }

  private static Logger logger = LoggerFactory.getLogger(SearchListController.class);
  @Autowired
  private HsrService hsrService;
  /**
   * 每頁筆數
   */
  private int pageSize = 10;

  public SearchListController() {
    try {
      this.pageSize = ConfigFactory.load("config.properties").getInt("page.pageSize");
    } catch (Exception e) {
      logger.warn(e.getMessage(), e);
    }
  }

  public HsrService getHsrService() {
    return hsrService;
  }

  public void setHsrService(HsrService hsrService) {
    this.hsrService = hsrService;
  }

  /**
   * @return 每頁筆數
   */
  public int getPageSize() {
    return pageSize;
  }

  /**
   * @param pageSize 每頁筆數
   */
  public void setPageSize(int pageSize) {
    this.pageSize = pageSize;
  }
}
